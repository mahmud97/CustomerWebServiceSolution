@model CustomerRegistration.Web.Models.CustomerVM
@{
	ViewBag.Title = "Home Page";
}

<div id="contact" class="form">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<h2>Registration</h2>
				
			</div> <!-- end of col -->
		</div> <!-- end of row -->
		<div class="row">
			<div class="col-lg-8 offset-lg-2">

				<!-- Contact Form -->

				<form action="/Home/Index" method="post">
					@Html.AntiForgeryToken()
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					@Html.ValidationMessage("expired", new { @class = "text-danger" })
					@Html.ValidationMessage("CaptchaFail", new { @class = "text-danger" })

					<div class="form-group">
						@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "required" })
						@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "required" })
						@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
					</div>

					<div class="form-group">
						@Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "required" })
						@Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
					</div>


					@Html.CheckBoxFor(model => model.IsTermsAccepted, new { htmlAttributes = new { @class = "form-control" } })
					@Html.LabelFor(model => model.IsTermsAccepted, htmlAttributes: new { @class = "required" })
					@Html.ActionLink("Privacy Policy", "PrivacyPolicy", "Home", new { target = "_blank" })
					@Html.ValidationMessageFor(model => model.IsTermsAccepted, "", new { @class = "text-danger" })


					<div class="form-group">
						<button type="submit" class="form-control-submit-button">SUBMIT MESSAGE</button>
					</div>
					<div class="form-message">
						<div id="cmsgSubmit" class="h3 text-center hidden"></div>
					</div>
				</form>
				<!-- end of contact form -->

			</div> <!-- end of col -->
		</div> <!-- end of row -->
	</div> <!-- end of container -->
</div> <!-- end of form -->

@section scripts{

	<script src="https://www.google.com/recaptcha/api.js?render=recaptchaSiteKe"></script>
	<script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.js"></script>
	<script src="//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.js"></script>

	<script>



		// extend range validator method to treat checkboxes differently
		var defaultRangeValidator = $.validator.methods.range;
		$.validator.methods.range = function (value, element, param) {
			if (element.type === 'checkbox') {
				// if it's a checkbox return true if it is checked
				return element.checked;
			} else {
				// otherwise run the default validation function
				return defaultRangeValidator.call(this, value, element, param);
			}
		}



		grecaptcha.ready(function () {
			grecaptcha.execute('recaptchaSiteKe', { action: 'homepage' }).then(function (token) {
				$.ajax({
					type: "GET",
					url: "/Home/SetToken",
					data: { _token: token },
					contentType: "application/json; charset=utf-8",

					success: function (response) {
						console.log('Passed the token successfully');
					},
					failure: function (response) {
						alert(response.d);
					}
				});
			});
		});
	</script>

}